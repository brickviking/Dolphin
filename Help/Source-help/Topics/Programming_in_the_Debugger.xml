<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title translate="true">Programming in the Debugger</title>
  <body>
    <header>
      <para styleclass="Heading1"><text styleclass="Heading1" translate="true">Programming in the Debugger</text></para>
    </header>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">The ability to restart methods that have been recompiled in the </text><text styleclass="Program Feature" translate="true">Debugger</text><text styleclass="Normal" translate="true"> allows for an approach to programming which is virtually impossible in any other programming language. Imagine doing most of your development work in the Debugger rather than the </text><text styleclass="Program Feature" translate="true">Class &#160;Browser</text><text styleclass="Normal" translate="true">. This is not only possible but often very desirable and leads to high development productivity. Here&apos;s how it works:</text></para>
    <list id="1" type="ol" listtype="decimal" formatstring="&#37;&#48;&#58;&#115;&#46;" levelreset="false" legalstyle="false" startfrom="1" styleclass="Normal" style="margin-left:24px; font-family:Arial; font-size:9pt; color:#000000;">
      <li styleclass="Normal" style="margin-left:24px;"><text styleclass="Normal" translate="true">Create your application class definitions using the </text><text styleclass="Program Feature" translate="true">Class Browser</text><text styleclass="Normal" translate="true"> but don&apos;t populate them with methods.</text></li>
      <li styleclass="Normal" style="margin-left:24px;"><text styleclass="Normal" translate="true">In a </text><text styleclass="Program Feature" translate="true">Workspace</text><text styleclass="Normal" translate="true">, send your first message to instantiate one of your classes:</text></li>
    </list>
    <para styleclass="Code Example" style="margin-left:48px;"><text styleclass="Code Example" translate="true">MyApp name: &apos;myapplication1&apos;.</text></para>
    <para styleclass="Code Example" style="margin-left:48px;"></para>
    <para styleclass="Normal" style="margin-left:48px;"><text styleclass="Normal" translate="true">This will bring up a </text><text styleclass="Class Name" translate="true">#doesNotUnderstand</text><text styleclass="Normal" translate="true">:</text><text styleclass="Normal" translate="true"> walkback for the #</text><text styleclass="Normal" translate="true">name</text><text styleclass="Normal" translate="true">: message sent to the </text><text styleclass="Class Name" translate="true">MyApp</text><text styleclass="Normal" translate="true"> class (since no methods exist in this class yet).</text></para>
    <list id="1" type="ol" listtype="decimal" formatstring="&#37;&#48;&#58;&#115;&#46;" levelreset="false" legalstyle="false" startfrom="1" styleclass="Normal" style="margin-left:24px; font-family:Arial; font-size:9pt; color:#000000;">
      <li styleclass="Normal" style="margin-left:24px;"><text styleclass="Normal" translate="true">In the </text><text styleclass="Program Feature" translate="true">Debugger</text><text styleclass="Normal" translate="true">, bring up the context menu for the </text><text styleclass="Class Name" translate="true">#doesNotUnderstand</text><text styleclass="Normal" translate="true">:</text><text styleclass="Normal" translate="true"> stack frame and choose </text><text styleclass="Class Name" translate="true">Debug/Implement in/MyApp class</text><text styleclass="Normal" translate="true">.</text><text styleclass="Normal" translate="true"> This will enter a stub method for #</text><text styleclass="Class Name" translate="true">name</text><text styleclass="Normal" translate="true">: in </text><text styleclass="Class Name" translate="true">MyApp class</text><text styleclass="Normal" translate="true">.</text></li>
      <li styleclass="Normal" style="margin-left:24px;"><text styleclass="Normal" translate="true">Modify the stub method; in this example we&apos;ll create an instance of MyApp and then forward the #name: method to it.</text></li>
    </list>
    <para styleclass="Code Example" style="margin-left:48px;"><text styleclass="Code Example" translate="true">name: aStringName</text></para>
    <para styleclass="Code Example" style="margin-left:48px;"><tab /><text styleclass="Code Example" translate="true">&quot;Answer an instance of the receiver with aStringName&quot;</text></para>
    <para styleclass="Code Example" style="margin-left:48px;"><tab /><text styleclass="Code Example" translate="true">^super new name: aStringName</text></para>
    <para styleclass="Code Example" style="margin-left:48px;"></para>
    <list id="1" type="ol" listtype="decimal" formatstring="&#37;&#48;&#58;&#115;&#46;" levelreset="false" legalstyle="false" startfrom="1" styleclass="Normal" style="margin-left:24px; font-family:Arial; font-size:9pt; color:#000000;">
      <li styleclass="Normal" style="margin-left:24px;"><text styleclass="Normal" translate="true">Once again, as you accept this method it will be restarted and will bring up another #</text><text styleclass="Class Name" translate="true">doesNotUnderstand</text><text styleclass="Normal" translate="true">: walkback, this time for the </text><text styleclass="Class Name" translate="true">#name</text><text styleclass="Normal" translate="true">: method on the instance side. Use </text><text styleclass="Menu Command" translate="true">Debug/Implement in/MyApp</text><text styleclass="Normal" translate="true"> to create a stub and continue as before.</text></li>
    </list>
    <para styleclass="Code Example" style="margin-left:48px;"><text styleclass="Code Example" translate="true">name: aStringName</text></para>
    <para styleclass="Code Example" style="margin-left:48px;"><tab /><text styleclass="Code Example" translate="true">&quot;Initialize the receiver with aStringName&quot;</text></para>
    <para styleclass="Code Example" style="margin-left:48px;"><tab /><text styleclass="Code Example" translate="true">name := aStringName</text></para>
    <para styleclass="Code Example" style="margin-left:48px;"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">As you can see, this is a rapid way of &quot;fleshing&quot; out a class. Note that you do not always have to create the stub methods in the class of the receiver. The </text><text styleclass="Normal" translate="true">Implement in</text><text styleclass="Normal" translate="true"> menu also displays a list of the receiver&apos;s superclasses where it may be more appropriate to insert the new method.</text></para>
  </body>
</topic>
