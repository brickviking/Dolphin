<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title translate="true">A quick note on MVP</title>
  <keywords>
    <keyword translate="true">A quick note on MVP</keyword>
  </keywords>
  <body>
    <header>
      <para styleclass="Heading1"><text styleclass="Heading1" translate="true">A quick note on MVP</text></para>
    </header>
    <para styleclass="body-text" style="text-align:left; text-indent:0px; margin-top:9px; margin-right:0px; margin-bottom:0px; margin-left:0px; line-height:1.46; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:none;"><text styleclass="body-text" style="font-family:Verdana; font-size:10pt; font-weight:normal; font-style:normal; text-decoration:none; text-transform:none; vertical-align:baseline; color:#000000; background-color:transparent; letter-spacing:normal; letter-scaling:100%;" translate="true">Dolphin Smalltalk uses an application framework known as </text><link displaytype="text" defaultstyle="true" type="topiclink" href="Htm.glossmodelviewpresenter" style="font-family:Verdana; font-size:10pt; color:#000000;" translate="true">Model View Presenter</link><text style="font-family:Verdana; font-size:10pt; color:#000000;" translate="true"> or </text><link displaytype="text" defaultstyle="true" type="topiclink" href="glossmvp" style="font-family:Verdana; font-size:10pt; color:#000000;" translate="true">MVP</link><text style="font-family:Verdana; font-size:10pt; color:#000000;" translate="true">. In this framework, an application&apos;s user interface is split into triads of elements each with its own jurisdiction.</text></para>
    <list id="1" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" style="text-indent:-13px; margin-left:39px; font-family:Symbol; font-size:10pt; color:#000000;">
      <li style="text-indent:-13px; margin-left:39px;"><text style="font-family:Verdana; font-size:10pt; font-style:italic; color:#000000;" translate="true">Models</text><text style="font-family:Verdana; font-size:10pt; color:#000000;" translate="true"> represent the application data and the operations that can be performed on it; they have no concern with the user interface aspects or how they will be manipulated by it.</text></li>
      <li style="text-indent:-13px; margin-left:39px;"><text style="font-family:Verdana; font-size:10pt; font-style:italic; color:#000000;" translate="true">Presenters</text><text style="font-family:Verdana; font-size:10pt; color:#000000;" translate="true"> contain the functionality that describes how a model will be controlled or updated by the user interface.</text></li>
      <li style="text-indent:-13px; margin-left:39px;"><text style="font-family:Verdana; font-size:10pt; font-style:italic; color:#000000;" translate="true">Views</text><text style="font-family:Verdana; font-size:10pt; color:#000000;" translate="true"> are user interface components that &quot;clip&quot; on to their associated models and presenters. A view&apos;s role is to display the contents of its model (it is in fact an observer of the model). It is also responsible for sending user input gestures (such as menu commands or mouse movements) to the presenter for it&apos;s interpretation as to how they should affect the model data.</text></li>
    </list>
    <para styleclass="body-text" style="text-align:left; text-indent:0px; margin-top:14px; margin-right:0px; margin-bottom:14px; margin-left:0px; line-height:1.46; background-color:transparent; white-space:normal; page-break-inside:auto; page-break-after:auto; border:none; tabstops:none;"><text styleclass="body-text" style="font-family:Verdana; font-size:10pt; font-weight:normal; font-style:normal; text-decoration:none; text-transform:none; vertical-align:baseline; color:#000000; background-color:transparent; letter-spacing:normal; letter-scaling:100%;" translate="true">The MVP framework gains because the user interface design is held entirely in the view layer and is kept separate from the logic of the application which is implemented by the model and presenter layers. This means that a user interface can be </text><link displaytype="text" defaultstyle="true" type="topiclink" href="Htm.caption.18" style="font-family:Verdana; font-size:10pt; color:#000000;" translate="true">changed</link><text style="font-family:Verdana; font-size:10pt; color:#000000;" translate="true"> without affecting the way the underlying application works.</text></para>
  </body>
</topic>
