<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title translate="true">Talking Bytes across a Socket Connection</title>
  <keywords>
    <keyword translate="true">Talking Bytes across a Socket Connection</keyword>
  </keywords>
  <body>
    <header>
      <para styleclass="Heading1"><text styleclass="Heading1" translate="true">Talking Bytes across a Socket Connection</text></para>
    </header>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">The lowest level of Socket communication is the sending and receiving of bytes. You can use the #</text><text styleclass="Class Name" translate="true">sendByte</text><text styleclass="Normal" translate="true">: method to send single bytes (integers between zero and 255 inclusive). For sending larger quantities of data the #</text><text styleclass="Class Name" translate="true">sendByteArray</text><text styleclass="Normal" translate="true">: method is more efficient. These calls will block until the data has actually been sent, although not necessarily until it has been received at far end of the connection.</text></para>
    <para styleclass="Normal Head"><text styleclass="Normal Head" translate="true">Examples</text></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">In the Client workspace send some bytes to </text><text styleclass="Class Name" translate="true">socketB</text><text styleclass="Normal" translate="true">.</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true">socketB sendByte: 255.</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true">socketB sendByteArray: #[1 2 3 4].</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true">socketB sendByteArray: &apos;hello&apos;.</text></para>
    <para styleclass="Code Example"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">Use #</text><text styleclass="Class Name" translate="true">receiveByte</text><text styleclass="Normal" translate="true"> to read a single byte from a Socket and to answer its integer value. If no data is available to be read, the call will block until the first byte is received. If you are expecting a number of bytes, then you can use #</text><text styleclass="Class Name" translate="true">receiveByteArray</text><text styleclass="Normal" translate="true">: to receive these into a </text><text styleclass="Class Name" translate="true">ByteArray</text><text styleclass="Normal" translate="true"> in a single operation. Note, though, that you must provide #</text><text styleclass="Class Name" translate="true">receiveByteArray</text><text styleclass="Normal" translate="true">: with the size of the array to allocate and return. The call will block until at least this number of bytes has been received by the </text><text styleclass="Class Name" translate="true">Socket</text><text styleclass="Normal" translate="true">.</text></para>
    <para styleclass="Normal Head"><text styleclass="Normal" translate="true">You may want to find out if a </text><text styleclass="Class Name" translate="true">Socket</text><text styleclass="Normal" translate="true"> has data available to be read before issuing one of these blocking calls. You can test this using the </text><text styleclass="Class Name" translate="true">#hasInput</text><text styleclass="Normal" translate="true"> method, which will answer true if one or more bytes are queued up waiting to be received.</text></para>
    <para styleclass="Normal Head"><text styleclass="Normal Head" translate="true">Examples</text></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">In the Server workspace let&apos;s receive the bytes from </text><text styleclass="Class Name" translate="true">socketA</text><text styleclass="Normal" translate="true"> that we sent earlier through </text><text styleclass="Class Name" translate="true">socketB</text><text styleclass="Normal" translate="true">. You should display the results of evaluating each of the following.</text></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">In the Server workspace:</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true">socketA hasInput.</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true">socketA receiveByte.</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true">socketA receiveByteArray: 4.</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true">(socketA receiveByteArray: 5) asString.</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true">socket hasInput.</text></para>
    <para styleclass="Code Example"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">The last test for input should return false to indicate that there are no more bytes waiting for collection from the </text><text styleclass="Class Name" translate="true">Socket</text><text styleclass="Normal" translate="true">.</text></para>
  </body>
</topic>
