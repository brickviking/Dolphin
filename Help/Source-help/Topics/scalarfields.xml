<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title translate="true">Scalar Fields</title>
  <keywords>
    <keyword translate="true">Scalar Fields</keyword>
  </keywords>
  <body>
    <header>
      <para styleclass="Heading1"><text styleclass="Heading1" translate="true">Scalar Fields</text></para>
    </header>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">Scalar fields are essentially the familiar base types of C and C++. We have chosen to use the Windows™ names for these types because they are independent of machine word size. So, for example, there are </text><text styleclass="Class Name" translate="true">BOOLFields</text><text styleclass="Normal" translate="true">&#32;</text><text styleclass="Normal" translate="true">to represent boolean values, and </text><text styleclass="Class Name" translate="true">WORDFields</text><text styleclass="Normal" translate="true">&#32;</text><text styleclass="Normal" translate="true">to represent unsigned 16-bit integers. These types are straightforward to use, and there are very many example in the system (e.g. </text><text styleclass="Class Name" translate="true">LOGBRUSH</text><text styleclass="Normal" translate="true">). The complete set of </text><text styleclass="Class Name" translate="true">ScalarFields</text><text styleclass="Normal" translate="true"> defined at the time of writing is listed in the following table:</text></para>
    <para styleclass="Normal"><table rowcount="14" colcount="3" style="width:449px; cell-padding:1px; cell-spacing:2px; border-width:1px; cell-border-width:1px; border-color:#aca899; border-style:raised-color;">
      <tr style="vertical-align:top">
        <td style="width:30%; background-color:#dddddd;">
          <para styleclass="Normal"><text styleclass="Normal" style="font-weight:bold;" translate="true">ExternalField Class</text></para>
        </td>
        <td style="width:18%; background-color:#dddddd;">
          <para styleclass="Normal"><text styleclass="Normal" style="font-weight:bold;" translate="true">C type(s)</text></para>
        </td>
        <td style="width:52%; background-color:#dddddd;">
          <para styleclass="Normal"><text styleclass="Normal" style="font-weight:bold;" translate="true">Description</text></para>
        </td>
      </tr>
      <tr style="vertical-align:top">
        <td style="width:30%; background-color:#eeeeee;">
          <para styleclass="Normal"><text styleclass="Normal" translate="true">BOOLField</text></para>
        </td>
        <td style="width:18%; background-color:#eeeeee;">
          <para styleclass="Normal"><text styleclass="Normal" translate="true">BOOL</text></para>
        </td>
        <td style="width:52%; background-color:#eeeeee;">
          <para styleclass="Normal"><text styleclass="Normal" translate="true">32-bit integer interpreted as TRUE if non-zero</text></para>
        </td>
      </tr>
      <tr style="vertical-align:top">
        <td style="width:30%; background-color:#eeeeee;">
          <para styleclass="Normal"><text styleclass="Normal" translate="true">BYTEField</text></para>
        </td>
        <td style="width:18%; background-color:#eeeeee;">
          <para styleclass="Normal"><text styleclass="Normal" translate="true">BYTE</text></para>
        </td>
        <td style="width:52%; background-color:#eeeeee;">
          <para styleclass="Normal"><text styleclass="Normal" translate="true">Unsigned 8-bit integer</text></para>
        </td>
      </tr>
      <tr style="vertical-align:top">
        <td style="width:30%; background-color:#eeeeee;">
          <para styleclass="Normal"><text styleclass="Normal" translate="true">DOUBLEField</text></para>
        </td>
        <td style="width:18%; background-color:#eeeeee;">
          <para styleclass="Normal"><text styleclass="Normal" translate="true">double</text></para>
        </td>
        <td style="width:52%; background-color:#eeeeee;">
          <para styleclass="Normal"><text styleclass="Normal" translate="true">64-bit double precision IEEE Float</text></para>
        </td>
      </tr>
      <tr style="vertical-align:top">
        <td style="width:30%; background-color:#eeeeee;">
          <para styleclass="Normal"><text styleclass="Normal" translate="true">DWORDField</text></para>
        </td>
        <td style="width:18%; background-color:#eeeeee;">
          <para styleclass="Normal"><text styleclass="Normal" translate="true">DWORD, UINT</text></para>
        </td>
        <td style="width:52%; background-color:#eeeeee;">
          <para styleclass="Normal"><text styleclass="Normal" translate="true">32-bit unsigned integer</text></para>
        </td>
      </tr>
      <tr style="vertical-align:top">
        <td style="width:30%; background-color:#eeeeee;">
          <para styleclass="Normal"><text styleclass="Normal" translate="true">HANDLEField</text></para>
        </td>
        <td style="width:18%; background-color:#eeeeee;">
          <para styleclass="Normal"><text styleclass="Normal" translate="true">HANDLE, HWND, etc</text></para>
        </td>
        <td style="width:52%; background-color:#eeeeee;">
          <para styleclass="Normal"><text styleclass="Normal" translate="true">32-bit opaque handle types, e.g.</text></para>
        </td>
      </tr>
      <tr style="vertical-align:top">
        <td style="width:30%; background-color:#eeeeee;">
          <para styleclass="Normal"><text styleclass="Normal" translate="true">LPVOIDField</text></para>
        </td>
        <td style="width:18%; background-color:#eeeeee;">
          <para styleclass="Normal"><text styleclass="Normal" translate="true">void*</text></para>
        </td>
        <td style="width:52%; background-color:#eeeeee;">
          <para styleclass="Normal"><text styleclass="Normal" translate="true">Generic pointer/address field (see Address Fields)</text></para>
        </td>
      </tr>
      <tr style="vertical-align:top">
        <td style="width:30%; background-color:#eeeeee;">
          <para styleclass="Normal"><text styleclass="Normal" translate="true">FLOATField</text></para>
        </td>
        <td style="width:18%; background-color:#eeeeee;">
          <para styleclass="Normal"><text styleclass="Normal" translate="true">float</text></para>
        </td>
        <td style="width:52%; background-color:#eeeeee;">
          <para styleclass="Normal"><text styleclass="Normal" translate="true">32-bit single precision IEEE Float</text></para>
        </td>
      </tr>
      <tr style="vertical-align:top">
        <td style="width:30%; background-color:#eeeeee;">
          <para styleclass="Normal"><text styleclass="Normal" translate="true">QWORDField</text></para>
        </td>
        <td style="width:18%; background-color:#eeeeee;">
          <para styleclass="Normal"><text styleclass="Normal" translate="true">unsigned __int64</text></para>
        </td>
        <td style="width:52%; background-color:#eeeeee;">
          <para styleclass="Normal"><text styleclass="Normal" translate="true">Unsigned 64-bit integer</text></para>
        </td>
      </tr>
      <tr style="vertical-align:top">
        <td style="width:30%; background-color:#eeeeee;">
          <para styleclass="Normal"><text styleclass="Normal" translate="true">SBYTEField</text></para>
        </td>
        <td style="width:18%; background-color:#eeeeee;">
          <para styleclass="Normal"><text styleclass="Normal" translate="true">SBYTE</text></para>
        </td>
        <td style="width:52%; background-color:#eeeeee;">
          <para styleclass="Normal"><text styleclass="Normal" translate="true">Signed 8-bit integer</text></para>
        </td>
      </tr>
      <tr style="vertical-align:top">
        <td style="width:30%; background-color:#eeeeee;">
          <para styleclass="Normal"><text styleclass="Normal" translate="true">SDWORDField</text></para>
        </td>
        <td style="width:18%; background-color:#eeeeee;">
          <para styleclass="Normal"><text styleclass="Normal" translate="true">SDWORD, int</text></para>
        </td>
        <td style="width:52%; background-color:#eeeeee;">
          <para styleclass="Normal"><text styleclass="Normal" translate="true">32-bit signed integer</text></para>
        </td>
      </tr>
      <tr style="vertical-align:top">
        <td style="width:30%; background-color:#eeeeee;">
          <para styleclass="Normal"><text styleclass="Normal" translate="true">SQWORDField</text></para>
        </td>
        <td style="width:18%; background-color:#eeeeee;">
          <para styleclass="Normal"><text styleclass="Normal" translate="true">__int64</text></para>
        </td>
        <td style="width:52%; background-color:#eeeeee;">
          <para styleclass="Normal"><text styleclass="Normal" translate="true">64-bit signed integer</text></para>
        </td>
      </tr>
      <tr style="vertical-align:top">
        <td style="width:30%; background-color:#eeeeee;">
          <para styleclass="Normal"><text styleclass="Normal" translate="true">SWORDField</text></para>
        </td>
        <td style="width:18%; background-color:#eeeeee;">
          <para styleclass="Normal"><text styleclass="Normal" translate="true">SWORD</text></para>
        </td>
        <td style="width:52%; background-color:#eeeeee;">
          <para styleclass="Normal"><text styleclass="Normal" translate="true">16-bit signed integer</text></para>
        </td>
      </tr>
      <tr style="vertical-align:top">
        <td style="width:30%; background-color:#eeeeee;">
          <para styleclass="Normal"><text styleclass="Normal" translate="true">WORDField</text></para>
        </td>
        <td style="width:18%; background-color:#eeeeee;">
          <para styleclass="Normal"><text styleclass="Normal" translate="true">WORD</text></para>
        </td>
        <td style="width:52%; background-color:#eeeeee;">
          <para styleclass="Normal"><text styleclass="Normal" translate="true">16-bit unsigned integer</text></para>
        </td>
      </tr>
    </table></para>
    <para styleclass="Normal Head"><text styleclass="Normal Head" translate="true">Address Fields</text></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">The most quirky scalar field type is </text><text styleclass="Class Name" translate="true">LPVOIDField</text><text styleclass="Normal" translate="true">,</text><text styleclass="Normal" translate="true"> which is used when one wants to access the pointers stored in structures as pointers, rather than the object pointed at by the pointer! Typically one does not want to worry about the indirection, and so one should employ </text><link displaytype="text" defaultstyle="true" type="topiclink" href="pointerfields" styleclass="Normal" translate="true">pointer fields</link><text styleclass="Normal" translate="true"> that automatically de-reference the pointer so that one can work with objects instead of addresses.</text></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">An example can be found in the </text><text styleclass="Class Name" translate="true">EDITSTREAM</text><text styleclass="Normal" translate="true">&#32;</text><text styleclass="Normal" translate="true">structure used with the Rich Edit control, which stores down a function pointer (into which we store an </text><link displaytype="text" defaultstyle="true" type="topiclink" href="externalcallbacks" styleclass="Normal" translate="true">ExternalCallback</link><text styleclass="Normal" translate="true">):</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true">defineFields</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160;&quot;Define the fields of the Win32 EDITSTREAM structure.</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160;EDITSTREAM compileDefinition</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160;typedef struct _editstream {</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160;DWORD dwCookie;</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160;DWORD dwError;</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160;EDITSTREAMCALLBACK pfnCallback;</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160;} EDITSTREAM;&quot;</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160;self</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160;defineField: #dwCookie type: DWORDField writeOnly;</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160;defineField: #dwError type: DWORDField filler;</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160;defineField: #pfnCallback type: LPVOIDField writeOnly</text></para>
  </body>
</topic>
