<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title translate="true">OLE/COM/Active-X Functions</title>
  <keywords>
    <keyword translate="true">OLE/COM/Active-X Functions</keyword>
  </keywords>
  <body>
    <header>
      <para styleclass="Heading1"><text styleclass="Heading1" translate="true">OLE/COM/Active-X Functions</text></para>
    </header>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">The virtual call interface is the basis of OLE/COM/Active-X interface call-out support in Dolphin. For example </text><text styleclass="Class Name" translate="true">IUnknown</text><text styleclass="Normal" translate="true">&#32;</text><text styleclass="Normal" translate="true">(a subclass of </text><text styleclass="Class Name" translate="true">ExternalStructure</text><text styleclass="Normal" translate="true">) contains the method:</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true">QueryInterface: QueryInterface ppvObject: ppvObject</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160;&quot;Callout for the IUnknown::QueryInterface() interface function.</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160;N.B. This method has been automatically generated from</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160;the vtable defined in IUnknown&gt;&gt;defineFunctions. DO NOT MODIFY!&quot;</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160;&lt;virtual stdcall: sdword 1 IID* lppvoid &gt;</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160;^self invalidCall</text></para>
    <para styleclass="Code Example"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">Note that this method has been generated automatically from the class&apos; function table, a facility of the OLE COM package, but is in other respects simply an external virtual function call.</text></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">Typically it is not necessary to manually build wrapper classes and methods for COM interfaces since these can be automatically generated by the </text><text styleclass="Program Feature" translate="true">Active-X Component Wizard</text><text styleclass="Normal" translate="true">. The generated classes can even contain methods to wrap the raw COM interface methods in such a way that they appear like normal Smalltalk methods and most external interfacing concerns (such as constructing buffers, or value holding structures, to receive the output parameters) can be ignored.</text></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">When implementing COM interfaces the function table in the interface wrapper class is used to locate the description of the arguments to methods, and again this is fairly transparent in operation. Essentially, however, the supporting technology is the same as that described in the section on </text><link displaytype="text" defaultstyle="true" type="topiclink" href="externalcallbacks" styleclass="Normal" translate="true">External Callbacks</link><text styleclass="Normal" translate="true"> below.</text></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">Note that it is not currently possible to overlap COM calls.</text></para>
  </body>
</topic>
