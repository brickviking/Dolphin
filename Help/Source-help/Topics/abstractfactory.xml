<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title translate="true">Abstract Factory</title>
  <keywords>
    <keyword translate="true">Abstract Factory</keyword>
  </keywords>
  <body>
    <header>
      <para styleclass="Heading1"><text styleclass="Heading1" translate="true">Abstract Factory</text></para>
    </header>
    <para styleclass="Normal Head"><text styleclass="Normal Head" translate="true">Context</text></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">Sometimes one wants to construct an instance of one of a suite of classes, deciding between the classes at the time of instantiation. In order to avoid duplicating the decision making everywhere an instance is created, we need a mechanism for creating instances of related classes without necessarily knowing which will be instantiated.</text></para>
    <para styleclass="Normal Head"><text styleclass="Normal Head" translate="true">Solution</text></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">Create an </text><text styleclass="Program Feature" translate="true">Abstract Factory</text><text styleclass="Normal" translate="true">&#32;</text><text styleclass="Normal" translate="true">by implementing an </text><link displaytype="text" defaultstyle="true" type="topiclink" href="abstractclass" styleclass="Normal" translate="true">Abstract Class</link><text styleclass="Normal" translate="true"> that answer instances of concrete classes (usually subclasses). class of the resultant instance is unknown to the client of the </text><text styleclass="Program Feature" translate="true">Abstract Factory</text><text styleclass="Normal" translate="true">.</text></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">There are two types of </text><text styleclass="Program Feature" translate="true">Abstract Factory</text><text styleclass="Normal" translate="true">:</text></para>
    <list id="1" type="ol" listtype="decimal" formatstring="&#37;&#48;&#58;&#115;&#46;" levelreset="true" legalstyle="false" startfrom="1" styleclass="Normal" style="font-family:Arial; font-size:9pt; color:#000000;">
      <li styleclass="Normal"><text styleclass="Normal" translate="true">The simple </text><text styleclass="Program Feature" translate="true">Abstract Factory </text><text styleclass="Normal" translate="true">is an </text><link displaytype="text" defaultstyle="true" type="topiclink" href="abstractclass" styleclass="Normal" translate="true">Abstract Class</link><text styleclass="Normal" translate="true"> defining </text><link displaytype="text" defaultstyle="true" type="topiclink" href="factorymethod" styleclass="Normal" translate="true">Factory Methods</link><text styleclass="Normal" translate="true"> to answer instances of concrete subclasses. The choice of which subclass to instantiate is completely defined by which method is used, and is unknown to the client. (See </text><text styleclass="Normal" translate="true">Color</text><text styleclass="Normal" translate="true"> in the Known Uses section below.)</text></li>
      <li styleclass="Normal"><text styleclass="Normal" translate="true">The second form of </text><text styleclass="Program Feature" translate="true">Abstract Factory</text><text styleclass="Normal" translate="true"> is an </text><link displaytype="text" defaultstyle="true" type="topiclink" href="abstractclass" styleclass="Normal" translate="true">Abstract Class</link><text styleclass="Normal" translate="true"> defining a common protocol of </text><link displaytype="text" defaultstyle="true" type="topiclink" href="factorymethod" styleclass="Normal" translate="true">Factory Methods</link><text styleclass="Normal" translate="true">. Concrete subclasses of the abstract factory implement this protocol to answer instances of the appropriate suite of classes.</text></li>
    </list>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">For example, concrete subclass </text><text styleclass="Class Name" translate="true">FactoryA</text><text styleclass="Normal" translate="true"> will always answer instances from the </text><text styleclass="Class Name" translate="true">SuiteA</text><text styleclass="Normal" translate="true"> classes, and concrete subclass </text><text styleclass="Class Name" translate="true">FactoryB</text><text styleclass="Normal" translate="true"> will always answer instances from the </text><text styleclass="Class Name" translate="true">SuiteB</text><text styleclass="Normal" translate="true"> classes. The choice of which subclass to instantiate is defined by the choice of factory, and is unknown to the client.</text></para>
    <para styleclass="Normal Head"><text styleclass="Normal Head" translate="true">Example</text></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">Here is an example of the more complex form of </text><text styleclass="Program Feature" translate="true">Abstract Factory</text><text styleclass="Normal" translate="true">. (For an example of the simple form, see </text><text styleclass="Class Name" translate="true">Color</text><text styleclass="Normal" translate="true"> in the </text><text styleclass="Normal" style="font-weight:bold;" translate="true">Known Uses</text><text styleclass="Normal" translate="true"> section below.)</text></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">Imagine a need to support two windowing environments, </text><text styleclass="Normal" translate="true">Microsoft Windows </text><text styleclass="Normal" translate="true">and the </text><text styleclass="Normal" translate="true">X Window System </text><text styleclass="Normal" translate="true">and to create GUI widgets appropriate to the specific environment in use</text><text styleclass="Normal" translate="true">.</text></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">Create an </text><text styleclass="Program Feature" translate="true">Abstract Factory</text><text styleclass="Normal" translate="true"> class </text><text styleclass="Class Name" translate="true">WindowFactory</text><text styleclass="Normal" translate="true"> defining methods like </text><text styleclass="Class Name" translate="true">#createButton</text><text styleclass="Normal" translate="true">. Add subclasses </text><text styleclass="Class Name" translate="true">MSWindowFactory</text><text styleclass="Normal" translate="true"> and </text><text styleclass="Class Name" translate="true">XWindowFactory</text><text styleclass="Normal" translate="true"> which implement </text><text styleclass="Class Name" translate="true">#createButton</text><text styleclass="Normal" translate="true"> to answer instances of </text><text styleclass="Class Name" translate="true">MSButton</text><text styleclass="Normal" translate="true"> or </text><text styleclass="Class Name" translate="true">XButton</text><text styleclass="Normal" translate="true"> respectively. A window painter can then be given an instance of </text><text styleclass="Class Name" translate="true">MSWindowFactory</text><text styleclass="Normal" translate="true"> or </text><text styleclass="Class Name" translate="true">XWindowFactory</text><text styleclass="Normal" translate="true">.</text><text styleclass="Normal" translate="true"> Sending it the </text><text styleclass="Class Name" translate="true">#createButton</text><text styleclass="Normal" translate="true"> message will result in an instance of </text><text styleclass="Class Name" translate="true">MSButton</text><text styleclass="Normal" translate="true"> or </text><text styleclass="Class Name" translate="true">Xbutton</text><text styleclass="Normal" translate="true">. Assuming they respond to the same protocol, the client can remain ignorant of the class of the resultant button.</text></para>
    <para styleclass="Normal Head"><text styleclass="Normal Head" translate="true">Known Uses</text></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">The </text><text styleclass="Class Name" translate="true">Color</text><text styleclass="Normal" translate="true"> class is a simple </text><text styleclass="Program Feature" translate="true">Abstract Factory</text><text styleclass="Normal" translate="true">. It defines class methods, some of which answer instances of </text><text styleclass="Class Name" translate="true">IndexedColor</text><text styleclass="Normal" translate="true">, others answer instances of </text><text styleclass="Class Name" translate="true">RGB</text><text styleclass="Normal" translate="true">. The choice between answering an</text><text styleclass="Normal" translate="true">&#32;</text><text styleclass="Class Name" translate="true">IndexedColor</text><text styleclass="Normal" translate="true"> or an </text><text styleclass="Class Name" translate="true">RGB</text><text styleclass="Normal" translate="true"> is made entirely by the </text><text styleclass="Class Name" translate="true">Color</text><text styleclass="Normal" translate="true"> class methods.</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true">Color red &quot;Display it&quot;</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160;an IndexedColor(16r100000D)</text></para>
    <para styleclass="Code Example"></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true">Color red: 10 green: 20 blue: 30 &quot;Displayit&quot;</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160;a RGB(10,20,30)</text></para>
    <para styleclass="Code Example"></para>
    <para styleclass="Normal Head"><text styleclass="Normal Head" translate="true">Related Patterns</text></para>
    <para styleclass="Normal"><link displaytype="text" defaultstyle="true" type="topiclink" href="abstractclass" styleclass="Normal" translate="true">Abstract Class</link></para>
  </body>
</topic>
