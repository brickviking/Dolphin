<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title translate="true">External Method Selector</title>
  <keywords>
    <keyword translate="true">External Method Selector</keyword>
  </keywords>
  <body>
    <header>
      <para styleclass="Heading1"><text styleclass="Heading1" translate="true">External Method Selector</text></para>
    </header>
    <para styleclass="Normal Head"><text styleclass="Normal Head" translate="true">Context</text></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">When implementing the function calling methods in an </text><link displaytype="text" defaultstyle="true" type="topiclink" href="externallibrary" styleclass="Normal" translate="true">External Library</link><text styleclass="Normal" translate="true">, there are frequently a large number of functions to be supported. Implementing all of these would consume a large amount of time, and waste memory in unused methods that might never be called. However, if methods are implemented on a demand basis, a standard form for the </text><link displaytype="text" defaultstyle="true" type="topiclink" href="methodname" styleclass="Normal" translate="true">Method Names</link><text styleclass="Normal" translate="true"> is required to simplify creating, reading and finding such methods, and avoid the possibility of multiple definitions of the same method with different names.</text></para>
    <para styleclass="Normal Head"><text styleclass="Normal Head" translate="true">Solution</text></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">Use an algorithm to generate suitable message selector from the function help or header file prototype. The algorithm permits no arbitrary choices, preventing name collisions, and problems merging when more than one party adds the same external function.</text></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">A suitable algorithm is:</text></para>
    <list id="1" type="ol" listtype="decimal" formatstring="&#37;&#48;&#58;&#115;&#46;" levelreset="false" legalstyle="false" startfrom="1" styleclass="Normal" style="margin-left:24px; font-family:Arial; font-size:9pt; color:#000000;">
      <li styleclass="Normal" style="margin-left:24px;"><text styleclass="Normal" translate="true">Form the first keyword of the selector from the entire function name, with a colon appended if the function has arguments. Underscores are removed by substituting </text><link displaytype="text" defaultstyle="true" type="topiclink" href="wordcapitalization" styleclass="Normal" translate="true">Word Capitalization</link><text styleclass="Normal" translate="true">. The first letter of the selector is always lower cased.</text></li>
      <li styleclass="Normal" style="margin-left:24px;"><text styleclass="Normal" translate="true">Subsequent keywords are formed from the </text><text styleclass="Normal" translate="true">names</text><text styleclass="Normal" translate="true"> (not type names) of the arguments, not including the first, as copied from the help file definition. The first letter is always lower cased, and again underscores are removed, if present.</text></li>
    </list>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">Using this scheme, two different programmers should always come up with the same selector name from the same help file definition.</text></para>
    <para styleclass="Normal Head"><text styleclass="Normal Head" translate="true">Example</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true">appendMenu: hMenuDrop uFlags: styleFlags uIDNewItem: menuId lpNewItem: menuText</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160;&quot;Appends a new item to the end of the specified menu with the specified</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160;style, identifier and text.</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160;BOOL AppendMenu(</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160;HMENU hMenu, &#160; &#160; &#160; &#160;// handle to menu</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160;UINT uFlags, &#160; &#160; &#160; &#160;// menu item flags</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160;UINT uIDNewItem, &#160; &#160;// menu item identifier or pop-up menu handle</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160;LPCTSTR lpNewItem &#160; &#160;// menu item content</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160;);&quot;</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160;&lt;stdcall: bool AppendMenuA handle dword dword lpstr&gt;</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160;^self invalidCall</text></para>
    <para styleclass="Code Example"></para>
    <para styleclass="Normal Head"><text styleclass="Normal Head" translate="true">Known Uses</text></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">All external methods in the base system libraries (e.g. </text><text styleclass="Class Name" translate="true">UserLibrary</text><text styleclass="Normal" translate="true">, </text><text styleclass="Class Name" translate="true">KernelLibrary</text><text styleclass="Normal" translate="true">) have selectors generated in this way.</text></para>
    <para styleclass="Normal Head"><text styleclass="Normal Head" translate="true">Related Patterns</text></para>
    <para styleclass="Normal"><link displaytype="text" defaultstyle="true" type="topiclink" href="externallibrary" styleclass="Normal" translate="true">External Library</link><text styleclass="Normal" translate="true">, </text><link displaytype="text" defaultstyle="true" type="topiclink" href="methodname" styleclass="Normal" translate="true">Method Name</link></para>
  </body>
</topic>
