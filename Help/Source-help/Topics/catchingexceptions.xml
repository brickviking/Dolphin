<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title translate="true">Catching Exceptions</title>
  <keywords>
    <keyword translate="true">Catching Exceptions</keyword>
  </keywords>
  <body>
    <header>
      <para styleclass="Heading1"><text styleclass="Heading1" translate="true">Catching Exceptions</text></para>
    </header>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">Protecting a sequence of Smalltalk statements and catching a class of exception, or classes of exception, that occur while executing that sequence is achieved by wrapping the statement sequence in a block (called the protected block, or try-block), and sending the block a</text><text styleclass="Class Name" translate="true"> #on:do: </text><text styleclass="Normal" translate="true">message to establish a new exception context. The two arguments to </text><text styleclass="Class Name" translate="true">#on:do:</text><text styleclass="Normal" translate="true"> are the class of </text><text styleclass="Class Name" translate="true">Exception</text><text styleclass="Normal" translate="true">&#32;</text><text styleclass="Normal" translate="true">to be caught (but </text><link displaytype="text" defaultstyle="true" type="topiclink" href="catchingmultipleexceptions" styleclass="Normal" translate="true">catching multiple exceptions</link><text styleclass="Normal" translate="true"> is possible), and a monadic block to handle exceptions which are of that kind.</text></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">For example:</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true">ByteArray&gt;&gt;safeAt: index</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160;&quot;Answer the byte at the specified index in the receiver.</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160;If the index is out of bounds, answer 0&quot;</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160;^[self at: index] on: BoundsError do: [:boundsError | 0]</text></para>
    <para styleclass="Code Example"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">Try browsing references to </text><text styleclass="Class Name" translate="true">#on:do:</text><text styleclass="Normal" translate="true"> to see some real examples in the base system.</text></para>
  </body>
</topic>
