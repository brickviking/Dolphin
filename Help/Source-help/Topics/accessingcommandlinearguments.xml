<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title translate="true">Accessing Command Line Arguments</title>
  <keywords>
    <keyword translate="true">Accessing Command Line Arguments</keyword>
  </keywords>
  <body>
    <header>
      <para styleclass="Heading1"><text styleclass="Heading1" translate="true">Accessing Command Line Arguments</text></para>
    </header>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">The parameters passed to a console application on the command line can be accessed by sending the message </text><text styleclass="Class Name" translate="true">#argv</text><text styleclass="Normal" translate="true"> to the session manager. This answers an array of strings in the same form as the argv argument to C&apos;s main() function. There is also an </text><text styleclass="Class Name" translate="true">#argc</text><text styleclass="Normal" translate="true"> message to independently access the number of arguments available.</text></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">As an example we might write an equivalent of the DOS type (or Unix cat) utility as follows:</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true">Main</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160;&quot;Dump the contents of all the files listed as arguments to stdout&quot;</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160;| args |</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160;args := self argv.</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160;args from: 2 to: args size do: [:f | | in |</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160;in := FileStream read: f.</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160;[in atEnd] whileFalse: [</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160; &#160; &#160;self stdout nextPutAll: (in nextAvailable: 1024)]].</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160;self stdout flush</text></para>
    <para styleclass="Notes"></para>
    <para styleclass="Notes"><text styleclass="Notes" translate="true">Note: We ignore the first argument, since this will be the name of the executable.</text></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">Access to the raw command line is also possible by sending the #getCommandLine message to the session manager.</text></para>
  </body>
</topic>
