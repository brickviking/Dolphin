<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title translate="true">Restricting Field Access</title>
  <keywords>
    <keyword translate="true">Restricting Field Access</keyword>
  </keywords>
  <body>
    <header>
      <para styleclass="Heading1"><text styleclass="Heading1" translate="true">Restricting Field Access</text></para>
    </header>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">When defining a template, one may not be interest in certain fields of the structure at all, or one may only require read or write access to particular fields. The external field objects have a set of attributes that can be set to record this information. For example, we currently retrieve window placement information primarily so that we can reset it, so we define WINDOWPLACEMENT as follows:</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true">defineFields</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160;&quot;…&quot;</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160;self</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160;defineField: #length type: DWORDField writeOnly;</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160;defineField: #flags type: DWORDField filler;</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160;defineField: #showCmd type: DWORDField new;</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160;defineField: #ptMinPosition type: (StructureField type: POINTL) beFiller;</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160;defineField: #ptMaxPosition type: (StructureField type: POINTL) beFiller;</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160;defineField: #rcNormalPosition type: (StructureField type: RECT)</text></para>
    <para styleclass="Code Example"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">If we compile this structure, then we will not get compiled accessors for the filler fields. If the structure is not compiled or uncompiled, then a </text><text styleclass="Normal" translate="true">MessageNotUnderstood</text><text styleclass="Normal" translate="true"> exception will be raised if any attempt is made to get or set those fields.</text></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">WINDOWPLACEMENT </text><text styleclass="Normal" translate="true">also includes a write only field, the first, #length. A common Win32™ practice is for the first field of a structure to be a 32-bit integer specifying the length of the structure. This is useful for both error checking (the callee can verify that the structure is of a size it is expecting) and versioning (the callee can sometimes tell which version of an API the caller is expecting to use by testing the structure size). We must set the </text><text styleclass="Normal" translate="true">length </text><text styleclass="Normal" translate="true">field to satisfy Windows™ that we&apos;ve passed the appropriate structure, but we never need to read it. When compiled we would not get an automatically generated read accessor for the </text><text styleclass="Normal" translate="true">length </text><text styleclass="Normal" translate="true">field, and if uncompiled attempting to read it would generate a </text><text styleclass="Class Name" translate="true">MessageNotUnderstood</text><text styleclass="Normal" translate="true">&#32;</text><text styleclass="Normal" translate="true">exception.</text></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">We can mark fields as read only in a similar way; examples can be found in </text><text styleclass="Class Name" translate="true">DRAWITEMSTRUCT</text><text styleclass="Normal" translate="true">:</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true">defineFields</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160;&quot;…&quot;</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160;self</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160;defineField: #ctlType type: DWORDField readOnly;</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160;defineField: #ctlID type: DWORDField readOnly;</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160;defineField: #itemID type: DWORDField readOnly;</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160;defineField: #itemAction type: DWORDField readOnly;</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160;defineField: #itemState type: DWORDField readOnly;</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160;defineField: #hwndItem type: DWORDField readOnly;</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160;defineField: #hDC type: DWORDField readOnly;</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160;defineField: #rcItem type: (StructureField type: RECT) beReadOnly;</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true"> &#160; &#160; &#160; &#160;defineField: #itemData type: DWORDField readOnly</text></para>
    <para styleclass="Code Example"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">Note that this structure includes another embedded </text><text styleclass="Class Name" translate="true">ExternalStructure</text><text styleclass="Normal" translate="true">. When </text><text styleclass="Class Name" translate="true">#rcItem</text><text styleclass="Normal" translate="true">&#32;</text><text styleclass="Normal" translate="true">is sent to a </text><text styleclass="Class Name" translate="true">DRAWITEMSTRUCT</text><text styleclass="Normal" translate="true">&#32;</text><text styleclass="Normal" translate="true">the answer will be a pointer instance of </text><text styleclass="Class Name" translate="true">RECT</text><text styleclass="Normal" translate="true">&#32;</text><text styleclass="Normal" translate="true">which references the original data, i.e. modifications to the </text><text styleclass="Class Name" translate="true">RECT</text><text styleclass="Normal" translate="true">&#32;</text><text styleclass="Normal" translate="true">will</text><text styleclass="Normal" translate="true"> update the </text><text styleclass="Class Name" translate="true">DRAWITEMSTRUCT</text><text styleclass="Normal" translate="true">&#32;</text><text styleclass="Normal" translate="true">in place. An identical but independent </text><text styleclass="Class Name" translate="true">RECT</text><text styleclass="Normal" translate="true">&#32;</text><text styleclass="Normal" translate="true">could be obtained by sending the original answer from </text><text styleclass="Class Name" translate="true">#rcItem</text><text styleclass="Normal" translate="true">&#32;</text><text styleclass="Normal" translate="true">the </text><text styleclass="Class Name" translate="true">#copy</text><text styleclass="Normal" translate="true">&#32;</text><text styleclass="Normal" translate="true">message.</text></para>
  </body>
</topic>
