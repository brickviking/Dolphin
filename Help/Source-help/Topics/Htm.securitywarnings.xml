<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title translate="true">Security Warnings</title>
  <keywords>
    <keyword translate="true">Security Warnings</keyword>
  </keywords>
  <body>
    <header>
      <para styleclass="Heading1"><text styleclass="Heading1" translate="true">Security Warnings</text></para>
    </header>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">It has been mentioned that, in order to sign a binary package, you will need a </text><link displaytype="text" defaultstyle="true" type="topiclink" href="dolphinsure" styleclass="Normal" translate="true">DolphinSure</link><text styleclass="Normal" translate="true"> certificate that can be used to identify you as the publisher of the package. This certificate is included in the exported binary package file so that it can be displayed to a potential client when the package is loaded.</text></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">When a client attempts to make use of a binary package, one of two </text><text styleclass="Normal" style="font-weight:bold;" translate="true">Security Warning</text><text styleclass="Normal" translate="true"> dialogs will be displayed:</text></para>
    <para styleclass="Normal"><image src="signedwarning.jpg" scale="100.00%" styleclass="Normal"></image></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">If the package has been code signed then this warning will appear. It shows the DolphinSure certificate of the package&apos;s publisher and it gives the client an opportunity to decide from this whether the package contents can be trusted and regarded as safe.</text></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">If the user decides to trust the package and clicks the </text><text styleclass="Normal" style="font-weight:bold;" translate="true">Yes</text><text styleclass="Normal" translate="true"> button then the publisher&apos;s certificate will be added to the </text><text styleclass="Normal" style="font-style:italic;" translate="true">#temporaryTrust</text><text styleclass="Normal" translate="true"> certificate store on the user&apos;s machine. This means that further packages signed with the certificate will be allowed to load without prompting for the duration of the current session.</text></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">Note that, the </text><text styleclass="Normal" style="font-style:italic;" translate="true">#temporaryTrust</text><text styleclass="Normal" translate="true"> store is automatically emptied each time a Dolphin image starts. This means that temporary trust is not transferred across each invocation of &#160;Dolphin Web Start (i.e. each new web start application will require that this trust be reaffirmed).</text></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">For cases when this might prove to be inconvenient it is possible to indicate that all applets from a particular supplier (i.e. with a particular DolphinSure certificate) can be permanently trusted. By ticking the, </text><text styleclass="Normal" translate="true">Always trust content with the certificate</text><text styleclass="Normal" translate="true">, box in the above dialog this will cause the certificate to be added to the #</text><text styleclass="Normal" style="font-style:italic;" translate="true">permanentTrust</text><text styleclass="Normal" translate="true"> store rather than the temporary one. The permanent store is never automatically emptied.</text></para>
    <para styleclass="Normal"><text styleclass="Normal" style="font-size:8pt;" translate="true">Note: The certificate trust stores are held in the Windows Registry So it is fairly easy to manually inspect and modify their contents using RegEdit.</text></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">When a client attempts to load an unsigned package, a second class of Security Warning dialog will be presented:</text></para>
    <para styleclass="Normal"><image src="notsignedwarning.jpg" scale="100.00%" styleclass="Normal"></image></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">This dialog indicates that the package being loaded has not been digitally signed and it offers the user the opportunity to decide whether this code can be trusted.</text></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">If the </text><text styleclass="Normal" translate="true">Yes</text><text styleclass="Normal" translate="true"> button is clicked, then the package will be accepted and a dummy </text><text styleclass="Normal" style="font-weight:bold;" translate="true">Not Signed</text><text styleclass="Normal" translate="true"> certificate will be added to the #</text><text styleclass="Normal" style="font-style:italic;" translate="true">temporaryTrust</text><text styleclass="Normal" translate="true"> store. This will mean that future attempts to load unsigned packages within the same session will also be accepted without warning.</text></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">Note that, for safety reasons, you are not allowed to install the </text><text styleclass="Normal" style="font-weight:bold;" translate="true">Not Signed</text><text styleclass="Normal" translate="true"> certificate into the permanent trust store.</text></para>
  </body>
</topic>
