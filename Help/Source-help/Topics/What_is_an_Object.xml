<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../helpproject.xsl" ?>
<topic template="Default" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../helpproject.xsd">
  <title translate="true">What is an Object?</title>
  <body>
    <header>
      <para styleclass="Heading1"><text styleclass="Heading1" translate="true">What is an Object?</text></para>
    </header>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">At the simplest level, an object is just an area of your computer&apos;s memory that contains some data bytes describing the object&apos;s state. For example, an object representing the text string, &apos;hello&apos;, would contain (amongst other things) the bytes:</text></para>
    <para styleclass="Code Example"><text styleclass="Code Example" translate="true">104 101 108 108 111</text></para>
    <para styleclass="Code Example"></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">Here each byte, of course, represents one character in the string. However, every object also contains additional information that allows it to &quot;know&quot; what kind of object it is. How this knowledge is encoded as part of the object is not relevant at this stage, but it is very important since it allows the object to determine how it should behave. For example, if we have two objects that are numbers it seems quite reasonable that we should be able to subtract one from the other. If, however, we had two text strings we would not expect to be able to perform a similar subtraction operation. The fact that the number objects &quot;know&quot; that they are numbers allows them to determine that subtraction is a relevant operation and also how that subtraction should be performed.</text></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">In Dolphin, there are objects that represent (amongst other things):</text></para>
    <list id="2" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Normal" style="margin-left:24px; font-family:Symbol; font-size:9pt; color:#000000;">
      <li styleclass="Normal" style="margin-left:24px;"><text styleclass="Normal" translate="true">Text strings</text></li>
      <li styleclass="Normal" style="margin-left:24px;"><text styleclass="Normal" translate="true">Numbers</text></li>
      <li styleclass="Normal" style="margin-left:24px;"><text styleclass="Normal" translate="true">Dictionaries</text></li>
      <li styleclass="Normal" style="margin-left:24px;"><text styleclass="Normal" translate="true">Text editors</text></li>
      <li styleclass="Normal" style="margin-left:24px;"><text styleclass="Normal" translate="true">Windows</text></li>
      <li styleclass="Normal" style="margin-left:24px;"><text styleclass="Normal" translate="true">Programs</text></li>
    </list>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">In Smalltalk:</text></para>
    <list id="3" type="ul" listtype="bullet" formatstring="&#183;" format-charset="SYMBOL_CHARSET" levelreset="true" legalstyle="false" startfrom="1" styleclass="Normal" style="margin-left:24px; font-family:Symbol; font-size:9pt; color:#000000;">
      <li styleclass="Normal" style="margin-left:24px;"><text styleclass="Normal" style="font-weight:bold;" translate="true">Everything is an object. </text></li>
      <li styleclass="Normal" style="margin-left:24px;"><text styleclass="Normal" style="font-weight:bold;" translate="true">All objects know what kind, or class, of object they are. </text></li>
    </list>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">Class is a very important word in Smalltalk parlance. The class of an object allows it to determine how it should behave.</text></para>
    <para styleclass="Notes"><text styleclass="Notes" translate="true">Tip: the fact that everything is an object in Smalltalk is highly significant. It makes Smalltalk a very pure object oriented programming language, much more so than other languages such as C++ or Java. This purity imparts a uniformity to the system that means that the language can be simple to learn and yet very powerful.</text></para>
    <para styleclass="Normal"><text styleclass="Normal" translate="true">When you are programming in Smalltalk, some objects can be represented directly in the language. These are called </text><text styleclass="Program Feature" translate="true">literals</text><text styleclass="Normal" translate="true">. Take a look at the following examples of literal objects:</text></para>
    <para styleclass="Normal" style="margin-left:24px;"><text styleclass="Normal" translate="true">&apos;Hello world&apos; - a text string</text><br/><text styleclass="Normal" translate="true">$H - the character H</text><br/><text styleclass="Normal" translate="true">517 - an integer number</text><br/><text styleclass="Normal" translate="true">789.45 - a floating point number</text><br/><text styleclass="Normal" translate="true">#(1 2 3) - an array of three integers</text><br/><text styleclass="Normal" translate="true">#show - a special object called a Symbol</text></para>
  </body>
</topic>
